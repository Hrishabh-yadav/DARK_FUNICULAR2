#include <bits/stdc++.h>

using namespace std;
vector <int > g1[200002];
unordered_map<int, int> m;
bool visited[200002];
void bfs(int s,int value,vector <int > g1[])
{
    list<int> queue;
    visited[s] = true;
    queue.push_back(s);
    m[s]=value;
    value+=6;
    vector<int>::iterator i;
    while(!queue.empty())
    {
        s = queue.front();
        queue.pop_front();
        value=m[s]+6;
        for (i = g1[s].begin(); i != g1[s].end(); ++i)
        {
            if (!visited[*i])
            {
                visited[*i] = true;
                queue.push_back(*i);
                m[*i]=value;
            }
            else
            {
                if(m[*i]>value)
                    m[*i]=value;
            }
        }
    }
}
int main()
{
    

    int q;
    cin >> q;
     while(q>0)
     {
         q--;
         int n,m1;
         cin>>n>>m1;
         vector <int > g1[200002];
         for(int i=1;i<=n;i++)
             m[i]=1000000000;
        for(int i = 1; i < n+1; i++)
        visited[i] = false;
         for(int i=0;i<m1;i++)
         {
             int l1,l2;
             cin>>l1>>l2;
             g1[l1].push_back(l2);
             g1[l2].push_back(l1);
         }
         int l;
         cin>>l;
         bfs(l,0,g1);
         for(int i=1;i<n+1;i++)
         {   if(i!=l&&m[i]!=1000000000)
             cout<<m[i]<<" ";
             else if(m[i]==1000000000)
                 cout<<"-1"<<" ";
         }
            cout<<"\n";
     }
}
